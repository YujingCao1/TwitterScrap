library(RJSONIO)
library(RJSONI0)
install.packages("RJSONIO")
library(RJSONIO)
test=fromJSON("https://www.govtrack.us/data/congress/1/votes/1/h1/data.json")
str(test)
length (test)
?lapply
urladdress=lapply(foldername, paste)
foldername=c("h1","h10")
urladdress=lapply(foldername, paste)
?paste
urladdress=lapply(foldername, paste("https://www.govtrack.us/data/congress/1/votes/1/"))
urladdress=lapply(foldername, paste,"https://www.govtrack.us/data/congress/1/votes/1/")
urladdress
urladdress=lapply("https://www.govtrack.us/data/congress/1/votes/1/", paste,foldername)
urladdress
urladdress=lapply("https://www.govtrack.us/data/congress/1/votes/1/", paste,foldername,sep="")
urladdress
test=fromJSON(paste(urladdress,"/data.json",sep=""))
paste(urladdress[[1]],"/data.json",sep="")
paste(urladdress[[1]][1],"/data.json",sep="")
test=fromJSON(paste(urladdress[[1]][1],"/data.json",sep=""))
test1=fromJSON(paste(urladdress[[1]][1],"/data.json",sep=""))
urladdress=unlist(lapply("https://www.govtrack.us/data/congress/1/votes/1/", paste,foldername,sep=""))
urladdress
paste(urladdress[1],"/data.json",sep="")
?read.table
?read.dta
install.packages("foregin")
install.packages("foreign")
?read.dta
??read.dta
library(foreign)
?read.dta
require("readstata13")
install.packages("readstata13")
library(readstata13)
test=read.dta("C:\Users\caoyujin\Desktop\Gemma\test.dta")
test=read.dta("C:/Users/caoyujin/Desktop/Gemma/test.dta")
test=read.dta13("C:/Users/caoyujin/Desktop/Gemma/test.dta")
warnings()
test=read.dta13("C:/Users/caoyujin/Desktop/Gemma/test.dta",convert.factors = FALSE)
View(test)
#R package "Twitte"
install_github("ProjectTw/TwitteR2Mongo")
install.packages("devtools")
library(devtools)
install_github("ProjectTw/TwitteR2Mongo")
install.packages("githubinstall")
library(githubinstall)
githubinstall("TwitteR2Mongo")
library(devtools)
find_rtools()
library(githubinstall)
githubinstall("TwitteR2Mongo")
install.packages("lazyeval")
githubinstall("TwitteR2Mongo")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
githubinstall("TwitteR2Mongo")
install.packages("ggmap","Rgooglemaps")
githubinstall("TwitteR2Mongo")
githubinstall("TwitteR2Mongo", dependencies = T)
install.packages("geosphere")
install.packages("ggmap")
githubinstall("TwitteR2Mongo")
library(TwitteR2Mongo)
setMongoDbCredentials(type = "hometimeline", collection = "hometimeline", db = "twitter", url = url = "mongodb://localhost")
setMongoDbCredentials(type = "hometimeline", collection = "hometimeline", db = "twitter", url = "mongodb://localhost")
setMongoDbCredentials(type = "filterstream", collection = "filterstream", db = "twitter",
url = "mongodb://localhost")
hometimeline = connect2MongoDb("hometimeline")
filterstream =connect2MongoDb("filterstream")
setAPICredentials(key = "p4m6ypNSn8oHgb4FfwUCttkdd", secret = "acgqmGW8BykEWLDnyIxN4OJsIcn3b0AcK0pRI2VHXSj7FLNgvu")
library(survival)
head(cgd0)
View(cgd0)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
library(readr)
data1 <- read_csv("C:/Users/caoyujin/Desktop/data1.csv")
View(data1)
df2=transform(data1, C=smaple(C))
df2 = data1[sample(1:nrow(data1)),]
View(df2)
df2[which(df2[1]=="GRIN2D"),]
write.csv(df2, file = "C:\Users\caoyujin\Desktop\Data1.csv", row.name=F)
write.csv(df2, file = "C:/Users/caoyujin/Desktop/Data1.csv", row.name=F)
write.csv(df2, file = "C:/Users/caoyujin/Desktop/Data1.csv", row.names =F)
View(df2)
View(df2)
library(readr)
data2 <- read_csv("C:/Users/caoyujin/Desktop/data2.csv")
View(data2)
df2 = data1[sample(1:nrow(data2)),]
df2 = data1[sample(1:nrow(data2)),]
df2 = data2[sample(1:nrow(data2)),]
View(df2)
write.csv(df2, file = "C:/Users/caoyujin/Desktop/Data2.csv", row.names =F)
library(readxl)
data1 <- read_excel("C:/Users/caoyujin/Desktop/data1.xlsx")
View(data1)
df=data1[sample(nrow(data1)),]
View(df)
data1[which(data1[1]=="CTSG"),]
write.csv(df,"C:/Users/caoyujin/Desktop/data1.csv", row.names = F)
install.packages("RCurl")
install.packages("XML")
library(XML)
updateR()
library(installr)
updateR()
dta = read.csv("//storage/groups/DASIL/2016ElectionData/data/election.csv", stringsAsFactors = F)
View(dta)
dta$c_fips[1]
dta$c_fips[1]=01001
dta$c_fips[1]
setwd("C:/Users/caoyujin/Desktop/twitter")
library(RJSONIO)
library(twitteR)
library(ROAuth)
library(RCurl)
library(stringr)
api_key="p4m6ypNSn8oHgb4FfwUCttkdd"
api_secret="acgqmGW8BykEWLDnyIxN4OJsIcn3b0AcK0pRI2VHXSj7FLNgvu"
token="2269314123-rXd7TBWJjn9CTcQWLpaALjvPoXneYVf3nvMU0NG"
token_secret="ZHun7mLReMJ05EEIG8toH8ja4ftYI5Eg1Lj9q1KJ25oSo"
cred=OAuthFactory$new(consumerKey='	p4m6ypNSn8oHgb4FfwUCttkdd',
consumerSecret='acgqmGW8BykEWLDnyIxN4OJsIcn3b0AcK0pRI2VHXSj7FLNgvu',
requestURL='https://api.twitter.com/oauth/request_token',
accessURL='https://api.twitter.com/oauth/access_token',
authURL='https://api.twitter.com/oauth/authorize')
download.file(url="http://curl.haxx.se/ca/cacert.pem",destfile="cacert.pem")
cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
download.file(url=”http://curl.haxx.se/ca/cacert.pem”,
destfile=”cacert.pem”)
download.file(url=”http://curl.haxx.se/ca/cacert.pem”, destfile=”cacert.pem”)
download.file(url="http://curl.haxx.se/ca/cacert.pem",destfile="cacert.pem")
cred$handshake(cainfo = "cacert.pem")
setwd("C:/Users/caoyujin/Desktop/twitter")
library(streamR)
library(RCurl)
library(RJSONIO)
library(stringr)
library(ROAuth)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "p4m6ypNSn8oHgb4FfwUCttkdd"
consumerSecret <- "acgqmGW8BykEWLDnyIxN4OJsIcn3b0AcK0pRI2VHXSj7FLNgvu"
my_oauth <- OAuthFactory$new(consumerKey = consumerKey,
consumerSecret = consumerSecret,
requestURL = requestURL,
accessURL = accessURL,
authURL = authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
my_oauth <- OAuthFactory$new(consumerKey = consumerKey,
consumerSecret = consumerSecret,
requestURL = requestURL,
accessURL = accessURL,
authURL = authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authenticate"
consumerKey <- "p4m6ypNSn8oHgb4FfwUCttkdd"
consumerSecret <- "acgqmGW8BykEWLDnyIxN4OJsIcn3b0AcK0pRI2VHXSj7FLNgvu"
my_oauth <- OAuthFactory$new(consumerKey = consumerKey,
consumerSecret = consumerSecret,
requestURL = requestURL,
accessURL = accessURL,
authURL = authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "p4m6ypNSn8oHgb4FfwUCttkdd"
consumerSecret <- "acgqmGW8BykEWLDnyIxN4OJsIcn3b0AcK0pRI2VHXSj7FLNgvu"
my_oauth <- OAuthFactory$new(consumerKey = consumerKey,
consumerSecret = consumerSecret,
requestURL = requestURL,
accessURL = accessURL,
authURL = authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "p4m6ypNSn8oHgb4FfwUCttkdd"
consumerSecret <- "acgqmGW8BykEWLDnyIxN4OJsIcn3b0AcK0pRI2VHXSj7FLNgvu"
my_oauth <- OAuthFactory$new(consumerKey = consumerKey,
consumerSecret = consumerSecret,
requestURL = requestURL,
accessURL = accessURL,
authURL = authURL)
options(RCurlOptions = list(cainfo = system.file("CurlSSL",
"cacert.pem",
package = "RCurl")))
my_oauth$handshake()
library(streamR)
library(RCurl)
library(RJSONIO)
library(stringr)
library(ROAuth)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "njOjhy0Ae9mQebygWGh4EUmVh"
consumerSecret <- "2TQL39s5kfsofxZiPvJBWcXUh1yxk0XXk0srUJQRbCkmUHFrR8"
my_oauth <- OAuthFactory$new(consumerKey = consumerKey,
consumerSecret = consumerSecret,
requestURL = requestURL,
accessURL = accessURL,
authURL = authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
save(my_oauth, file = "my_oauth.Rdata")
setwd("C:/Users/caoyujin/Desktop/twitter")
library(streamR)
load("my_oauth.Rdata")
filterStream(file.name = "tweets.json",
track = c("#EDSA30", "#NoMoreMacros", "#NoToMarcosBurial", "#MarcosNotAHero"),
language = "en",
timeout = 60,
oauth = my_oauth)
tweets.df = parseTweets("tweets.json", simplify = FALSE)
tweets.df = parseTweets("tweets.json", simplify = FALSE)
setwd("C:/Users/caoyujin/Desktop/twitter")
library(twitteR)
library(RCurl)
library(RJSONIO)
library(stringr)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "njOjhy0Ae9mQebygWGh4EUmVh"
consumerSecret <- "2TQL39s5kfsofxZiPvJBWcXUh1yxk0XXk0srUJQRbCkmUHFrR8"
accesstoken = "2269314123-J8SqFHGl6INyhydfVkCBRwoJVfaMP2IYuwbw5Ue"
token_secret = "sUZk6mata7TXSmeVnPQm19oK97K2PGDPA6TXcWSJ5KnQL"
setup_twitter_oauth(consumerKey, consumerSecret, accesstoken, token_secret)
tweets=searchTwitter("#EDSA30 OR #NoMoreMacros OR #NoToMarcosBurial OR #MarcosNotAHero", n=100, lang="en", since = "2014-01-01")
filterStream(file.name = "tweets.json",
track = c("#EDSA30", "#NoMoreMacros", "#NoToMarcosBurial", "#MarcosNotAHero"),
language = "en",
timeout = 1800,
oauth = my_oauth)
tweets.df=twListToDF(tweets)
View(tweets.df)
setwd("C:/Users/caoyujin/Desktop/twitter")
library(twitteR)
library(RCurl)
library(RJSONIO)
library(stringr)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "njOjhy0Ae9mQebygWGh4EUmVh"
consumerSecret <- "2TQL39s5kfsofxZiPvJBWcXUh1yxk0XXk0srUJQRbCkmUHFrR8"
accesstoken = "2269314123-J8SqFHGl6INyhydfVkCBRwoJVfaMP2IYuwbw5Ue"
token_secret = "sUZk6mata7TXSmeVnPQm19oK97K2PGDPA6TXcWSJ5KnQL"
setup_twitter_oauth(consumerKey, consumerSecret, accesstoken, token_secret)
tweets=searchTwitter("#MarcosNotAHero", n=100, lang="en", since = "2014-01-01")
tweets=searchTwitter("#NoMoreMacros OR #NoToMarcosBurial", lang="en")
tweets=searchTwitter("#EDSA30 OR #NoMoreMacros OR #NoToMarcosBurial OR #MarcosNotAHero", lang="en")
tweets.df=twListToDF(tweets)
View(tweets.df)
tweets=searchTwitter("#OscarsSoWhite", n=1000, lang="en")
tweets=searchTwitter("#EDSA30 OR #NoMoreMacros OR #NoToMarcosBurial OR #MarcosNotAHero")
